#################################################################
################# LOAD CONTROL PACKAGE #####################
#################################################################
# Author: andbad                                                #
# GitHub: https://github.com/andbad/HA_PowerControl             #
# Version: 3.42b                                                 #
#################################################################
########################### CREDITS #############################
# Thanks to the InDomus community for their help                #
# received in the compilation of the following package.         #
#       ----->>      https://indomus.it/      <<-----           #
#################################################################


# The following package, combined with the python script "update_entities.py" aims to avoid counter detachment due to
# of too much power absorbed by the various appliances (loads).
# Fundamental hardware requirement is the presence of switches on the loads to be controlled and a sensor that measures the power
# of individual loads.
# I personally used Shelly 1PM and Shelly Plug S devices, perfect for the purpose.
# It is recommended, but not mandatory, to use a sensor that monitors the overall consumption of the system (eg Shelly EM).
# The logic is that if the overall usage exceeds the set limit value, the package starts detachment
# of lower priority loads to higher priority loads, until overall power utilization falls within
# within the set limit.
# There are two maximum limits: in case you exceed the maximum value "delayed", the system will wait a few minutes
# (adjustable by a special option) before proceeding with the detachment; if the immediate maximum value is exceeded,
# The detachment occurs after a few seconds (also in this case adjusted by its slider).
# The script keeps memory of load absorption before detachment and reconnects it only when availability
# of power is sufficient not to cause a new detachment.
# The configuration is entirely via lovelace interface, except the notification group (notify.all) which must be set
# manually.

#################################################################
########################## RECORDER #############################
#################################################################
# The following sensors must be enabled in the recorder, in order to display the intervention history in the graph
# of the graphical interface. Uncommenting the following lines may affect the configuration of the recorder in other files.

#recorder:
#  include:
#    entities:
#      - sensor.selected_load
#      - sensor.suspended_loads
#      - sensor.immediate_maximum_power
#      - sensor.delayed_maximum_power

#################################################################
########################## SENSORS ##############################
#################################################################
# The most effective solution is to use a power sensor upstream of the system, just before the meter.
# In that case just select the appropriate sensor in the configuration.
# The following example uses a ShellyEM, in channel 1.
# - Platform: MQTT
# name: "Power loads"
# state_topic: "shellies/NOME_SHELLY/emeter/0/power"
# value_template: "{{ value }}"
# unit_of_measurement : "Watt"
# icon: mdi:speedometer

template:
# Alternatively you can use the power sensors of the higher loads used and maintain a certain margin
# tolerance.
# This involves monitoring all major loads (oven, stove, hair dryer, air conditioners, etc ...).
# Of course in this way you can not evaluate the overall consumption, so you could exceed the limit value
# without load control intervening.
# Using a conservative maximum power value (e.g. 3kW) and counting on the tolerances of 180 minutes up to 80%
# (e.g. 3.6kW) is equally functional.
  - sensor:
    - name: virtual_power_load
      unit_of_measurement: 'W'
      state: >
          {{ states(states('input_text.power_load_1'))|int(default=0) +
             states(states('input_text.power_load_2'))|int(default=0) +
             states(states('input_text.power_load_3'))|int(default=0) +
             states(states('input_text.power_load_4'))|int(default=0) +
             states(states('input_text.power_load_5'))|int(default=0) +
             states(states('input_text.power_load_6'))|int(default=0) +
             states(states('input_text.power_load_7'))|int(default=0) +
             states(states('input_text.power_load_8'))|int(default=0) +
             states(states('input_text.power_load_9'))|int(default=0) +
             states(states('input_text.power_load_10'))|int(default=0) +
             states(states('input_text.power_load_11'))|int(default=0) +
             states(states('input_text.power_load_12'))|int(default=0) +
             states(states('input_text.power_load_13'))|int(default=0) +
             states(states('input_text.power_load_14'))|int(default=0) +
             states(states('input_text.power_load_15'))|int(default=0) +
             states(states('input_text.power_load_16'))|int(default=0) +
             states(states('input_text.power_load_17'))|int(default=0) +
             states(states('input_text.power_load_18'))|int(default=0) +
             states(states('input_text.power_load_19'))|int(default=0) +
             states(states('input_text.power_load_20'))|int(default=0) }}

# Sum of all "suspended" power, i.e. loads that were in operation with a given absorption but were
# disabled.
    - name: suspended_loads
      unit_of_measurement: 'W'
      state: >
          {{ states('input_number.suspended_load_1')|int(default=0) + 
             states('input_number.suspended_load_2')|int(default=0) + 
             states('input_number.suspended_load_3')|int(default=0) + 
             states('input_number.suspended_load_4')|int(default=0) + 
             states('input_number.suspended_load_5')|int(default=0) + 
             states('input_number.suspended_load_6')|int(default=0) +
             states('input_number.suspended_load_7')|int(default=0) +
             states('input_number.suspended_load_8')|int(default=0) +
             states('input_number.suspended_load_9')|int(default=0) +
             states('input_number.suspended_load_10')|int(default=0) +
             states('input_number.suspended_load_11')|int(default=0) +
             states('input_number.suspended_load_12')|int(default=0) +
             states('input_number.suspended_load_13')|int(default=0) +
             states('input_number.suspended_load_14')|int(default=0) +
             states('input_number.suspended_load_15')|int(default=0) +
             states('input_number.suspended_load_16')|int(default=0) +
             states('input_number.suspended_load_17')|int(default=0) +
             states('input_number.suspended_load_18')|int(default=0) +
             states('input_number.suspended_load_19')|int(default=0) +
             states('input_number.suspended_load_20')|int(default=0) }}

# Shows the status of the selected sensor, useful for the graph.
    - name: selected_power_loads
      unit_of_measurement: 'W'
      state: "{{ states(states('input_text.power_load')) |int(default=0) }}"

# Maximum value that loads can reach before starting the detachment
    - name: immediate_maximum_power
      unit_of_measurement: 'W'
      state: "{{ states('input_number.immediate_maximum_power')|int(default=0) }}"

    - name: delayed_maximum_power
      unit_of_measurement: 'W'
      state: "{{ states('input_number.delayed_maximum_power')|int(default=0) }}"
        
#################################################################
######################### INPUT_* ###############################
#################################################################
input_text:
# In these fields, the name of the entities selected by the front end is saved.
  power_load_1:
  power_load_2:
  power_load_3:
  power_load_4:
  power_load_5:
  power_load_6:
  power_load_7:
  power_load_8:
  power_load_9:
  power_load_10:
  power_load_11:
  power_load_12:
  power_load_13:
  power_load_14:
  power_load_15:
  power_load_16:
  power_load_17:
  power_load_18:
  power_load_19:
  power_load_20:

  load_switch_1:
  load_switch_2:
  load_switch_3:
  load_switch_4:
  load_switch_5:
  load_switch_6:
  load_switch_7:
  load_switch_8:
  load_switch_9:
  load_switch_10:
  load_switch_11:
  load_switch_12:
  load_switch_13:
  load_switch_14:
  load_switch_15:
  load_switch_16:
  load_switch_17:
  load_switch_18:
  load_switch_19:
  load_switch_20:

  power_load:

input_boolean:
# Switch for the graphical interface
  active_power_control:
    name: Active Power Control
    icon: mdi:car-cruise-control

  power_control_settings:
    name: Show Power Control Settings
    icon: mdi:car-cruise-control

# Tracks the trigger that triggered the stop automation:
# if it is "0" means that the threshold of delayed posting has been exceeded
# if it is "1" the threshold of immediate detachment has been exceeded.
  trigger_sensor:
    name: trigger sensor
    initial: off
    
# If set on, activate the new script that filters only entities starting with "sensor.power" and "switch.switch"
  python_script_selection:
    name: Selection Python Script

    
input_number:

# They keep memory of the power used at the time of detachment, to evaluate reactivation.
  suspended_load_1:
    initial: 0
    min: 0
    max: 15000
  suspended_load_2:
    initial: 0
    min: 0
    max: 15000
  suspended_load_3:
    initial: 0
    min: 0
    max: 15000
  suspended_load_4:
    initial: 0
    min: 0
    max: 15000
  suspended_load_5:
    initial: 0
    min: 0
    max: 15000
  suspended_load_6:
    initial: 0
    min: 0
    max: 15000
  suspended_load_7:
    initial: 0
    min: 0
    max: 15000
  suspended_load_8:
    initial: 0
    min: 0
    max: 15000
  suspended_load_9:
    initial: 0
    min: 0
    max: 15000
  suspended_load_10:
    initial: 0
    min: 0
    max: 15000
  suspended_load_11:
    initial: 0
    min: 0
    max: 15000
  suspended_load_12:
    initial: 0
    min: 0
    max: 15000
  suspended_load_13:
    initial: 0
    min: 0
    max: 15000
  suspended_load_14:
    initial: 0
    min: 0
    max: 15000
  suspended_load_15:
    initial: 0
    min: 0
    max: 15000
  suspended_load_16:
    initial: 0
    min: 0
    max: 15000
  suspended_load_17:
    initial: 0
    min: 0
    max: 15000
  suspended_load_18:
    initial: 0
    min: 0
    max: 15000
  suspended_load_19:
    initial: 0
    min: 0
    max: 15000
  suspended_load_20:
    initial: 0
    min: 0
    max: 15000
  
 # Slider for the configuration of the maximum usable power, exceeded this threshold the detachment is immediate
  immediate_maximum_power:
    min: 0
    max: 30000
    step: 100

 # Slider for the configuration of the maximum usable power, exceeding this threshold the system will wait a few minutes
 # before acting.
  delayed_maximum_power:
    min: 0
    max: 30000
    step: 100

 # Wait a few SECONDS between one detachment and the next.
  immediate_stop_pace:
    min: 0
    max: 60
    step: 1  
  
 # Wait a few MINUTES between one detachment and another.
  delayed_stop_pace:
    min: 0
    max: 180
    step: 10  
  
 # So many MINUTES after the power used has returned below the treshold, start to reactivate the loads
  restart_delay:
    min: 0
    max: 60
    step: 1  
  
 # Wait a few SECONDS between one detachment and another.
  pause_between_detachments:
    min: 0
    max: 60
    step: 1  

  # Wait a few MINUTES between one reactivation and another to give time to the load to resume its normal absorption
  pause_between_reactivations:
    min: 0
    max: 60
    step: 1  


input_select:
# Drop-down for Power Control setup. The list of switches and sensors is updated when HA starts.
  load_list:
    name: Power load List
    options:
      - Select
      
# Selection of the power sensor used. If not configured, the virtual sensor is used
  power_load:
    name: Power load Sensor
    options:
      - Select

# Load switch
  load_switch_1:
    name: Priority Load Switch 1
    options:
      - Select
  load_switch_2:
    name: Priority Load Switch 2
    options:
      - Select
  load_switch_3:
    name: Priority Load Switch 3
    options:
      - Select
  load_switch_4:
    name: Priority Load Switch 4
    options:
      - Select
  load_switch_5:
    name: Priority Load Switch 5
    options:
      - Select
  load_switch_6:
    name: Priority Load Switch 6
    options:
      - Select
  load_switch_7:
    name: Priority Load Switch 7
    options:
      - Select
  load_switch_8:
    name: Priority Load Switch 8
    options:
      - Select
  load_switch_9:
    name: Priority Load Switch 9
    options:
      - Select
  load_switch_10:
    name: Priority Load Switch 10
    options:
      - Select
  load_switch_11:
    name: Priority Load Switch 11
    options:
      - Select
  load_switch_12:
    name: Priority Load Switch 12
    options:
      - Select
  load_switch_13:
    name: Priority Load Switch 13
    options:
      - Select
  load_switch_14:
    name: Priority Load Switch 14
    options:
      - Select
  load_switch_15:
    name: Priority Load Switch 15
    options:
      - Select
  load_switch_16:
    name: Priority Load Switch 16
    options:
      - Select
  load_switch_17:
    name: Priority Load Switch 17
    options:
      - Select
  load_switch_18:
    name: Priority Load Switch 18
    options:
      - Select
  load_switch_19:
    name: Priority Load Switch 19
    options:
      - Select
  load_switch_20:
    name: Priority Load Switch 20
    options:
      - Select

# Power load sensors
  power_load_1:
    name: Priority Load Sensor 1
    options:
      - Select
  power_load_2:
    name: Priority Load Sensor 2
    options:
      - Select
  power_load_3:
    name: Priority Load Sensor 3
    options:
      - Select
  power_load_4:
    name: Priority Load Sensor 4
    options:
      - Select
  power_load_5:
    name: Priority Load Sensor 5
    options:
      - Select
  power_load_6:
    name: Priority Load Sensor 6
    options:
      - Select
  power_load_7:
    name: Priority Load Sensor 7
    options:
      - Select
  power_load_8:
    name: Priority Load Sensor 8
    options:
      - Select
  power_load_9:
    name: Priority Load Sensor 9
    options:
      - Select
  power_load_10:
    name: Priority Load Sensor 10
    options:
      - Select
  power_load_11:
    name: Priority Load Sensor 11
    options:
      - Select
  power_load_12:
    name: Priority Load Sensor 12
    options:
      - Select
  power_load_13:
    name: Priority Load Sensor 13
    options:
      - Select
  power_load_14:
    name: Priority Load Sensor 14
    options:
      - Select
  power_load_15:
    name: Priority Load Sensor 15
    options:
      - Select
  power_load_16:
    name: Priority Load Sensor 16
    options:
      - Select
  power_load_17:
    name: Priority Load Sensor 17
    options:
      - Select
  power_load_18:
    name: Priority Load Sensor 18
    options:
      - Select
  power_load_19:
    name: Priority Load Sensor 19
    options:
      - Select
  power_load_20:
    name: Priority Load Sensor 20
    options:
      - Select

#################################################################
####################### AUTOMATION #############################
#################################################################
automation:

# When starting HA, update the input_slider with the list of entities for configuration fields.
# When HA starts, wait for the "Populate Entities" automation to finish, then load the switch configuration
# and power sensors.
  - id: 'powercontrol_load_config'
    alias: PowerControl - Load - Config
    mode: single
    trigger:
      - platform: homeassistant
        event: start
        id: start
      - platform: event
        id: reload
        event_type:
          - automation_reloaded
    action:
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Configuration Automation - Load - Launch Configuration Script"
      - choose:
        - conditions:
            - condition: trigger
              id: start
          sequence:
            - service: script.turn_on
              data: {}
              entity_id: script.powercontrol_populate_entities_configuration
            - wait_template: "{{ state_attr('script.powercontrol_populate_entities_configuration','current') == 0 }}"
        - conditions:
            - condition: trigger
              id: reload
          sequence:
            - delay:
                minutes: 1
            - service: script.turn_on
              data: {}
              entity_id: script.powercontrol_populate_entities_configuration
            - wait_template: "{{ state_attr('script.powercontrol_populate_entities_configuration','current') == 0 }}"
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Configuration Automation - Load - End Configuration Script"

# Automation that is triggered when the power used exceeds the maximum power set.
# Acts after TOT seconds from exceeding the limit, starts the detachment script and sends intervention notification.
# Repeats the start of the detachment script until the committed power is within the limit.
  - id: 'powercontrol_load_stop'
    alias: PowerControl - Loads Stop
    mode: single
    description: ''
    trigger:
    - platform: template
      value_template: "{{ states(states('input_text.power_load')) |int(default=0) > states('sensor.immediate_maximum_power')|int(default=0) }}"
      for:
        seconds: "{{ states('input_number.immediate_stop_pace')|int(default=0) }}"
      id: immediate
    - platform: template
      value_template: "{{ states(states('input_text.power_load')) |int(default=0) > states('sensor.delayed_maximum_power')|int(default=0) }}"
      for:
        minutes: "{{ states('input_number.delayed_stop_pace')|int(default=0) }}"
      id: delayed
    condition:
    - condition: state
      entity_id: input_boolean.active_power_control
      state: 'on'
    action:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Load Automation Stop Triggered: Load Power ({{ states(states('input_text.power_load'))|int(default=0) }}))"
    - choose:
      - conditions:
          - condition: trigger
            id: immediate
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: input_boolean.trigger_sensor
          - service: system_log.write
            data_template:
              level: debug
              logger: homeassistant.components.pc
              message: "Load Automation Stop Triggered: Immediate Trigger Type"
      - conditions:
          - condition: trigger
            id: delayed
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.trigger_sensor
          - service: system_log.write
            data_template:
              level: debug
              logger: homeassistant.components.pc
              message: "Load Automation Stop Triggered: Delayed Trigger Type"

    - repeat:
        sequence:
          - service: system_log.write
            data_template:
              level: debug
              logger: homeassistant.components.pc
              message: "Started load stop script: load power {{ states(states('input_text.power_load'))|int(default=0)}}"
          - service: script.turn_on
            data: {}
            entity_id: script.general_stop_loads
        until:
          - condition: template
            value_template: >
              {{
              ((states(states('input_text.power_load'))|int(default=0) > states('sensor.delayed_maximum_power')|int(default=0)) and states('input_boolean.trigger_sensor') == "off") or
              ((states(states('input_text.power_load'))|int(default=0) > states('sensor.immediate_maximum_power')|int(default=0)) and states('input_boolean.trigger_sensor') == "on")
              }}
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.trigger_sensor

# If the power limit is respected for TOT minutes, start the load reactivation script until the "suspended" power is zero.
  - id: 'powercontrol_load_start'
    alias: PowerControl - Load Start
    description: ''
    mode: single
    trigger:
    - platform: template
      value_template: "{{ ((states(states('input_text.power_load'))|int(default=0) + states('sensor.suspended_loads')|int(default=0)) < states('sensor.delayed_maximum_power')|int(default=0)) and (states('sensor.suspended_loads')|int(default=0) > 0) }}"
      for:
        minutes: "{{ states('input_number.start_time')|int(default=0) }}"
    condition:
    - condition: state
      entity_id: input_boolean.active_power_control
      state: 'on'
    - condition: template
      value_template: "{{ states('sensor.suspended_loads')|int(default=0) > 0 }}"
    action:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Load start automation triggered: Load power+suspended ({{ states(states('input_text.power_load'))|int(default=0) + states('sensor.suspended_loads')|int(default=0)}}) < Maximum power ({{states('sensor.delayed_maximum_power')|int(default=0) }}) "
    - repeat:
        until:
        - condition: template
          value_template: "{{ states('sensor.suspended_loads')|int(default=0) > 0 }}"
        sequence:
        - service: system_log.write
          data_template:
            level: debug
            logger: homeassistant.components.pc
            message: "Start script start loads: suspended ({{ states('sensor.suspended_loads')|int(default=0) }})>0 "
        - service: script.turn_on
          data: {}
          entity_id: script.start_loads_general

# Checks if a load is turned back on manually, i.e. if its switch is activated by the user,
# and resets its suspended power.
  - id: 'powercontrol_watchdog_suspended'
    alias: PowerControl - Check on manual reactivation
    mode: single

    description: >-
      Monitor load switches and, if one of them is active but its suspended power
      is different from 0, the door to zero.
    trigger:
      - platform: template
        value_template: >
              {{
              ( states(states('input_text.load_switch_1')) == 'on' and states('input_number.suspended_load_1')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_2')) == 'on' and states('input_number.suspended_load_2')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_3')) == 'on' and states('input_number.suspended_load_3')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_4')) == 'on' and states('input_number.suspended_load_4')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_5')) == 'on' and states('input_number.suspended_load_5')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_6')) == 'on' and states('input_number.suspended_load_6')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_7')) == 'on' and states('input_number.suspended_load_7')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_8')) == 'on' and states('input_number.suspended_load_8')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_9')) == 'on' and states('input_number.suspended_load_9')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_10')) == 'on' and states('input_number.suspended_load_10')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_11')) == 'on' and states('input_number.suspended_load_11')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_12')) == 'on' and states('input_number.suspended_load_12')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_13')) == 'on' and states('input_number.suspended_load_13')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_14')) == 'on' and states('input_number.suspended_load_14')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_15')) == 'on' and states('input_number.suspended_load_15')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_16')) == 'on' and states('input_number.suspended_load_16')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_17')) == 'on' and states('input_number.suspended_load_17')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_18')) == 'on' and states('input_number.suspended_load_18')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_19')) == 'on' and states('input_number.suspended_load_19')|int(default=0) > 0 ) or
              ( states(states('input_text.load_switch_20')) == 'on' and states('input_number.suspended_load_20')|int(default=0) > 0 )
              }}
        for:
          seconds: 5
    condition: []
    action:
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: Automation Check Manual reactivation - Start
      - service: input_number.set_value
        data_template:
          value: 0
          entity_id: "{% if states(states('input_text.load_switch_1')) == 'on' and states('input_number.suspended_load_1')|int(default=0) > 0 %}input_number.suspended_load_1
          {% elif states(states('input_text.load_switch_2')) == 'on' and states('input_number.suspended_load_2')|int(default=0) > 0 %}input_number.suspended_load_2
          {% elif states(states('input_text.load_switch_3')) == 'on' and states('input_number.suspended_load_3')|int(default=0) > 0 %}input_number.suspended_load_3
          {% elif states(states('input_text.load_switch_4')) == 'on' and states('input_number.suspended_load_4')|int(default=0) > 0 %}input_number.suspended_load_4
          {% elif states(states('input_text.load_switch_5')) == 'on' and states('input_number.suspended_load_5')|int(default=0) > 0 %}input_number.suspended_load_5
          {% elif states(states('input_text.load_switch_6')) == 'on' and states('input_number.suspended_load_6')|int(default=0) > 0 %}input_number.suspended_load_6
          {% elif states(states('input_text.load_switch_7')) == 'on' and states('input_number.suspended_load_7')|int(default=0) > 0 %}input_number.suspended_load_7
          {% elif states(states('input_text.load_switch_8')) == 'on' and states('input_number.suspended_load_8')|int(default=0) > 0 %}input_number.suspended_load_8
          {% elif states(states('input_text.load_switch_9')) == 'on' and states('input_number.suspended_load_9')|int(default=0) > 0 %}input_number.suspended_load_9
          {% elif states(states('input_text.load_switch_10')) == 'on' and states('input_number.suspended_load_10')|int(default=0) > 0 %}input_number.suspended_load_10
          {% elif states(states('input_text.load_switch_11')) == 'on' and states('input_number.suspended_load_11')|int(default=0) > 0 %}input_number.suspended_load_11
          {% elif states(states('input_text.load_switch_12')) == 'on' and states('input_number.suspended_load_12')|int(default=0) > 0 %}input_number.suspended_load_12
          {% elif states(states('input_text.load_switch_13')) == 'on' and states('input_number.suspended_load_13')|int(default=0) > 0 %}input_number.suspended_load_13
          {% elif states(states('input_text.load_switch_14')) == 'on' and states('input_number.suspended_load_14')|int(default=0) > 0 %}input_number.suspended_load_14
          {% elif states(states('input_text.load_switch_15')) == 'on' and states('input_number.suspended_load_15')|int(default=0) > 0 %}input_number.suspended_load_15
          {% elif states(states('input_text.load_switch_16')) == 'on' and states('input_number.suspended_load_16')|int(default=0) > 0 %}input_number.suspended_load_16
          {% elif states(states('input_text.load_switch_17')) == 'on' and states('input_number.suspended_load_17')|int(default=0) > 0 %}input_number.suspended_load_17
          {% elif states(states('input_text.load_switch_18')) == 'on' and states('input_number.suspended_load_18')|int(default=0) > 0 %}input_number.suspended_load_18
          {% elif states(states('input_text.load_switch_19')) == 'on' and states('input_number.suspended_load_19')|int(default=0) > 0 %}input_number.suspended_load_11
          {% elif states(states('input_text.load_switch_20')) == 'on' and states('input_number.suspended_load_20')|int(default=0) > 0 %}input_number.suspended_load_20
          {% else %}none
          {% endif %}"
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: Automation Check Manual reactivation - End


#################################################################
######################### SCRIPT  ###############################
#################################################################

script:

# Loads are deactivated in reverse numerical order (lowest priority to highest).
# Wait for one script to be completely completed before moving on to the next.
  general_stop_loads:
    alias: PowerControl - Stop Loads General
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 20"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_20')}}"
        switch: "{{states('input_text.load_switch_20')}}"
        suspended: "input_number.suspended_load_20"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 19"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_19')}}"
        switch: "{{states('input_text.load_switch_19')}}"
        suspended: "input_number.suspended_load_19"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 18"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_18')}}"
        switch: "{{states('input_text.load_switch_18')}}"
        suspended: "input_number.suspended_load_18"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 17"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_17')}}"
        switch: "{{states('input_text.load_switch_17')}}"
        suspended: "input_number.suspended_load_17"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 16"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_16')}}"
        switch: "{{states('input_text.load_switch_16')}}"
        suspended: "input_number.suspended_load_16"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 15"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_15')}}"
        switch: "{{states('input_text.load_switch_15')}}"
        suspended: "input_number.suspended_load_15"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 14"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_14')}}"
        switch: "{{states('input_text.load_switch_14')}}"
        suspended: "input_number.suspended_load_14"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 13"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_13')}}"
        switch: "{{states('input_text.load_switch_13')}}"
        suspended: "input_number.suspended_load_13"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 12"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_12')}}"
        switch: "{{states('input_text.load_switch_12')}}"
        suspended: "input_number.suspended_load_12"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 11"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_11')}}"
        switch: "{{states('input_text.load_switch_11')}}"
        suspended: "input_number.suspended_load_11"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 10"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_10')}}"
        switch: "{{states('input_text.load_switch_10')}}"
        suspended: "input_number.suspended_load_10"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 9"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_9')}}"
        switch: "{{states('input_text.load_switch_9')}}"
        suspended: "input_number.suspended_load_9"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 8"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_8')}}"
        switch: "{{states('input_text.load_switch_8')}}"
        suspended: "input_number.suspended_load_8"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 7"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_7')}}"
        switch: "{{states('input_text.load_switch_7')}}"
        suspended: "input_number.suspended_load_7"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 6"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_6')}}"
        switch: "{{states('input_text.load_switch_6')}}"
        suspended: "input_number.suspended_load_6"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 5"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_5')}}"
        switch: "{{states('input_text.load_switch_5')}}"
        suspended: "input_number.suspended_load_5"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 4"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_4')}}"
        switch: "{{states('input_text.load_switch_4')}}"
        suspended: "input_number.suspended_load_4"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 3"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_3')}}"
        switch: "{{states('input_text.load_switch_3')}}"
        suspended: "input_number.suspended_load_3"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 2"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_2')}}"
        switch: "{{states('input_text.load_switch_2')}}"
        suspended: "input_number.suspended_load_2"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script stop load 1"
    - service: script.stop_single_load
      data_template:
        power: "{{states('input_text.power_load_1')}}"
        switch: "{{states('input_text.load_switch_1')}}"
        suspended: "input_number.suspended_load_1"
    mode: single

# Loads are reactivated in numerical order (from higher priority to lowest priority)
# Wait for one script to be completely completed before moving on to the next.
  start_loads_general:
    alias: PowerControl - Start Loads General
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 1"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_1')}}"
        switch: "{{states('input_text.load_switch_1')}}"
        suspended: "input_number.suspended_load_1"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 2"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_2')}}"
        switch: "{{states('input_text.load_switch_2')}}"
        suspended: "input_number.suspended_load_2"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 3"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_3')}}"
        switch: "{{states('input_text.load_switch_3')}}"
        suspended: "input_number.suspended_load_3"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 4"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_4')}}"
        switch: "{{states('input_text.load_switch_4')}}"
        suspended: "input_number.suspended_load_4"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 5"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_5')}}"
        switch: "{{states('input_text.load_switch_5')}}"
        suspended: "input_number.suspended_load_5"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 6"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_6')}}"
        switch: "{{states('input_text.load_switch_6')}}"
        suspended: "input_number.suspended_load_6"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 7"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_7')}}"
        switch: "{{states('input_text.load_switch_7')}}"
        suspended: "input_number.suspended_load_7"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 8"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_8')}}"
        switch: "{{states('input_text.load_switch_8')}}"
        suspended: "input_number.suspended_load_8"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 9"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_9')}}"
        switch: "{{states('input_text.load_switch_9')}}"
        suspended: "input_number.suspended_load_9"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 10"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_10')}}"
        switch: "{{states('input_text.load_switch_10')}}"
        suspended: "input_number.suspended_load_10"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 11"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_11')}}"
        switch: "{{states('input_text.load_switch_11')}}"
        suspended: "input_number.suspended_load_11"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 12"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_12')}}"
        switch: "{{states('input_text.load_switch_12')}}"
        suspended: "input_number.suspended_load_12"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 13"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_13')}}"
        switch: "{{states('input_text.load_switch_13')}}"
        suspended: "input_number.suspended_load_13"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 14"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_14')}}"
        switch: "{{states('input_text.load_switch_14')}}"
        suspended: "input_number.suspended_load_14"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 15"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_15')}}"
        switch: "{{states('input_text.load_switch_15')}}"
        suspended: "input_number.suspended_load_15"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 16"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_16')}}"
        switch: "{{states('input_text.load_switch_16')}}"
        suspended: "input_number.suspended_load_16"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 17"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_17')}}"
        switch: "{{states('input_text.load_switch_17')}}"
        suspended: "input_number.suspended_load_17"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 18"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_18')}}"
        switch: "{{states('input_text.load_switch_18')}}"
        suspended: "input_number.suspended_load_18"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 19"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_19')}}"
        switch: "{{states('input_text.load_switch_19')}}"
        suspended: "input_number.suspended_load_19"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Start script start load 20"
    - service: script.start_single_load
      data_template:
        power: "{{states('input_text.power_load_20')}}"
        switch: "{{states('input_text.load_switch_20')}}"
        suspended: "input_number.suspended_load_20"
    mode: single

#################################################################
###################### STOP LOADS #############################
#################################################################

# Start the load detachment.
# Verify that the load is configured as a power sensor and as a switch.
# Check if the maximum power is exceeded, if the load is on (committed power > 10W).
# Save the currently used power in its "suspend" value.
# Turn off the switch upstream of the load and send the notification. Wait for TOT seconds before proceeding with the next load.

  stop_single_load:
    alias: PowerControl - Stop Single Load
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Start"
    # Check if the load power sensor is set
    - condition: template
      value_template: "{{ power != 'Select' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 1 - Ok"

    # Check if the load power sensor is available
    - condition: template
      value_template: "{{ states(power) != 'unavailable' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 1.5 - Ok"

    # Check if the load switch is set
    - condition: template
      value_template: "{{ switch != 'Select' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 2 - Ok"

    # Check if the load switch is available
    - condition: template
      value_template: "{{ states(switch) != 'unavailable' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 2.5 - Ok"

    # Check if the power in use is greater than the set limits
    - condition: template
      value_template: >
        {{
        ((states(states('input_text.power_load'))|int(default=0) > states('sensor.delayed_maximum_power')|int(default=0)) and states('input_boolean.trigger_sensor') == "off") or
        ((states(states('input_text.power_load'))|int(default=0) > states('sensor.immediate_maximum_power')|int(default=0)) and states('input_boolean.trigger_sensor') == "on") 
        }}
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 3 - Ok {{ states(states('input_text.power_load'))|int(default=0)}}W}}"
    # Check if the load is currently in use
    - condition: template
      value_template: "{{ states(power) |int(default=0) > 10 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 4 - Ok"
    # Except for power in use from the load on its suspended sensor
    - service: input_number.set_value
      data_template:
        value: "{{ states(power) }}"
        entity_id: "{{suspended}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Shifted load power {{ states(power) }} vs suspended {{states(suspended)|int(default=0)}} (should be the same)."
    # I turn off the load
    - service_template: switch.turn_off
      data_template:
        entity_id: "{{ switch }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Load Off"
    # Send Notification
    - service: notify.all
      data:
        title: Power Limit Exceeded
        message: "{{ state_attr(switch,'friendly_name') }} deactivated."
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Sent notification. We expect {{ states('input_number.pause_between_detachments') }} seconds "
    # We wait before moving on to the next load to be detached.
    - delay: 
        seconds: "{{ states('input_number.pause_between_detachments') }}"
    mode: queued



#################################################################
###################### START LOADS ############################
#################################################################

# Script for reactivating loads.
# Verify that the load is configured as a power sensor and as a switch.
# Check that the load has been turned off (power waiting)
# Check that the power limit is respected.
# Check even if reactivating the load (assuming a consumption equal to what it had at the time of deactivation)
# does not exceed the maximum value.
# This last check is used to prevent a load from being reattached and then reattached after a few seconds because it has
# caused a new overshoot of the limit.
# Set its "suspended" value to zero, turn the switch back on and send a wake-up notification.
# Finally wait TOT minutes before moving on to the next load.

  start_single_load:
    alias: PowerControl - Start Single Load
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Start"
    # Check if the load power sensor has been configured
    - condition: template
      value_template: "{{ power != 'Select' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Condition 1 ok"
    
    # Check if the load power sensor is available
    - condition: template
      value_template: "{{ states(power) != 'unavailable' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 1.5 - Ok"
        
    # Check if the load switch has been configured
    - condition: template
      value_template: "{{ switch != 'Select' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Condition 2 ok"
        
    # Check if the load switch is available
    - condition: template
      value_template: "{{ states(switch) != 'unavailable' }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Stop Load {{ state_attr(switch,'friendly_name') }} - Condition 2.5 - Ok"

    # Check if the suspended power of the load is greater than 0 (in this case the load has been turned off by the load account)
    - condition: template
      value_template: "{{ states(suspended)|int(default=0) > 0 }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Condition 3 ok"
    # We verify that the power in use is less than the maximum delayed power.
    - condition: template
      value_template: "{{ states(states('input_text.power_load'))|int(default=0) < states('sensor.delayed_maximum_power')|int(default=0)}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Condition 4 ok"
    # Check if, by reactivating the load, the power limit is not exceeded again.
    - condition: template
      value_template: "{{ states(states('input_text.power_load'))|int(default=0) + states(suspended)|int(default=0) < states('sensor.delayed_maximum_power')|int(default=0) }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Condition 5 ok"
    # Set the suspended load power to zero.
    - service: input_number.set_value
      data_template:
        value: 0
        entity_id: "{{suspended}}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Reset suspended power"
    # We turn on the load
    - service_template: switch.turn_on
      data_template:
        entity_id: "{{ switch }}"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Switch activated"
    # Send notification
    - service: notify.all
      data:
        title: Recessed power limit
        message: "{{ state_attr(switch,'friendly_name') }} Reactivated"
        data:
          push:
            thread-id: "powercontrol"
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Start Load {{ state_attr(switch,'friendly_name') }} - Sent notification. We expect {{ states('input_number.restart_delay') }} minutes"
    - delay:
        minutes: "{{ states('input_number.restart_delay') }}"
    mode: queued



#################################################################
###################### CONFIGURATION ###########################
#################################################################

# When HA starts, update the input_slider with the list of entities for the configuration fields.
  powercontrol_populate_entities_configuration:
    alias: PowerControl - Configuration - Populate entities
    sequence:
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Configuration - Populate entities - Started python scripts"
    - choose:
      - conditions:
          - condition: state
            entity_id: input_boolean.python_script_selection
            state: 'off'
        sequence:
          - service: python_script.update_entities
      - conditions:
          - condition: state
            entity_id: input_boolean.python_script_selection
            state: 'on'
        sequence:
          - service: python_script.update_entities_new
    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Configuration - Populate entities - Finished python script"

    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Configuration - Loads - Load input_select by its input_text"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load
        option: "{{ states('input_text.power_load') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_1
        option: "{{ states('input_text.power_load_1') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_2
        option: "{{ states('input_text.power_load_2') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_3
        option: "{{ states('input_text.power_load_3') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_4
        option: "{{ states('input_text.power_load_4') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_5
        option: "{{ states('input_text.power_load_5') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_6
        option: "{{ states('input_text.power_load_6') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_7
        option: "{{ states('input_text.power_load_7') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_8
        option: "{{ states('input_text.power_load_8') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_9
        option: "{{ states('input_text.power_load_9') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_10
        option: "{{ states('input_text.power_load_10') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_11
        option: "{{ states('input_text.power_load_11') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_12
        option: "{{ states('input_text.power_load_12') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_13
        option: "{{ states('input_text.power_load_13') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_14
        option: "{{ states('input_text.power_load_14') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_15
        option: "{{ states('input_text.power_load_15') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_16
        option: "{{ states('input_text.power_load_16') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_17
        option: "{{ states('input_text.power_load_17') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_18
        option: "{{ states('input_text.power_load_18') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_19
        option: "{{ states('input_text.power_load_19') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.power_load_20
        option: "{{ states('input_text.power_load_20') }}"


    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_1
        option: "{{ states('input_text.load_switch_1') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_2
        option: "{{ states('input_text.load_switch_2') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_3
        option: "{{ states('input_text.load_switch_3') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_4
        option: "{{ states('input_text.load_switch_4') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_5
        option: "{{ states('input_text.load_switch_5') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_6
        option: "{{ states('input_text.load_switch_6') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_7
        option: "{{ states('input_text.load_switch_7') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_8
        option: "{{ states('input_text.load_switch_8') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_9
        option: "{{ states('input_text.load_switch_9') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_10
        option: "{{ states('input_text.load_switch_10') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_11
        option: "{{ states('input_text.load_switch_11') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_12
        option: "{{ states('input_text.load_switch_12') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_13
        option: "{{ states('input_text.load_switch_13') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_14
        option: "{{ states('input_text.load_switch_14') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_15
        option: "{{ states('input_text.load_switch_15') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_16
        option: "{{ states('input_text.load_switch_16') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_17
        option: "{{ states('input_text.load_switch_17') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_18
        option: "{{ states('input_text.load_switch_18') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_19
        option: "{{ states('input_text.load_switch_19') }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.load_switch_20
        option: "{{ states('input_text.load_switch_20') }}"

    - service: system_log.write
      data_template:
        level: debug
        logger: homeassistant.components.pc
        message: "Script Configuration - Loads - End of Loading"

# When a parameter is changed in PowerControl configuration via input_select,waits for the "Load" automation to finish, then loads the value into the relative input_text.
  powercontrol_configuration_save:
    alias: PowerControl - Configuration - Save
    sequence:
      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Script Configuration - Save - Start automation, wait for automation to finish powercontrol_load_config"
      - wait_template: "{{ state_attr('automation.powercontrol_load_config','current') == 0 }}"
      - service: system_log.write

        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Script Configurazione - Save - Save input_select in input_text"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load
          value: "{{ states('input_select.power_load') }}"

      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_1
          value: "{{ states('input_select.power_load_1') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_2
          value: "{{ states('input_select.power_load_2') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_3
          value: "{{ states('input_select.power_load_3') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_4
          value: "{{ states('input_select.power_load_4') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_5
          value: "{{ states('input_select.power_load_5') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_6
          value: "{{ states('input_select.power_load_6') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_7
          value: "{{ states('input_select.power_load_7') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_8
          value: "{{ states('input_select.power_load_8') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_9
          value: "{{ states('input_select.power_load_9') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_10
          value: "{{ states('input_select.power_load_10') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_11
          value: "{{ states('input_select.power_load_11') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_12
          value: "{{ states('input_select.power_load_12') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_13
          value: "{{ states('input_select.power_load_13') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_14
          value: "{{ states('input_select.power_load_14') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_15
          value: "{{ states('input_select.power_load_15') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_16
          value: "{{ states('input_select.power_load_16') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_17
          value: "{{ states('input_select.power_load_17') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_18
          value: "{{ states('input_select.power_load_14') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_19
          value: "{{ states('input_select.power_load_19') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.power_load_20
          value: "{{ states('input_select.power_load_20') }}"

      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_1
          value: "{{ states('input_select.load_switch_1') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_2
          value: "{{ states('input_select.load_switch_2') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_3
          value: "{{ states('input_select.load_switch_3') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_4
          value: "{{ states('input_select.load_switch_4') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_5
          value: "{{ states('input_select.load_switch_5') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_6
          value: "{{ states('input_select.load_switch_6') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_7
          value: "{{ states('input_select.load_switch_7') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_8
          value: "{{ states('input_select.load_switch_8') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_9
          value: "{{ states('input_select.load_switch_9') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_10
          value: "{{ states('input_select.load_switch_10') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_11
          value: "{{ states('input_select.load_switch_11') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_12
          value: "{{ states('input_select.load_switch_12') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_13
          value: "{{ states('input_select.load_switch_13') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_14
          value: "{{ states('input_select.load_switch_14') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_15
          value: "{{ states('input_select.load_switch_15') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_16
          value: "{{ states('input_select.load_switch_16') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_17
          value: "{{ states('input_select.load_switch_17') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_18
          value: "{{ states('input_select.load_switch_18') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_19
          value: "{{ states('input_select.load_switch_19') }}"
      - service: input_text.set_value
        data:
          entity_id: input_text.load_switch_20
          value: "{{ states('input_select.load_switch_20') }}"

      - service: system_log.write
        data_template:
          level: debug
          logger: homeassistant.components.pc
          message: "Script Configuration - Save - End of Saving"
